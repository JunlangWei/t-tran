package modules

import (
	"errors"
	"strconv"
	"strings"
	"time"
)

func initUserInfos() {
	xin := []string{"赵", "钱", "孙", "李", "周", "吴", "郑", "王", "冯", "陈", "褚", "卫", "蒋", "沈", "韩", "杨", "朱", "秦", "尤", "许",
		"何", "吕", "施", "张", "孔", "曹", "严", "华", "金", "魏", "陶", "姜", "戚", "谢", "邹", "喻", "柏", "水", "窦", "章", "云", "苏", "潘",
		"葛", "奚", "范", "彭", "郎", "鲁", "韦", "昌", "马", "苗", "凤", "花", "方", "俞", "任", "袁", "柳", "酆", "鲍", "史", "唐", "费", "廉",
		"岑", "薛", "雷", "贺", "倪", "汤", "滕", "殷", "罗", "毕", "郝", "邬", "安", "常", "乐", "于", "时", "傅", "皮", "卞", "齐", "康", "伍",
		"余", "元", "卜", "顾", "孟", "平", "黄", "和", "穆", "萧", "尹", "姚", "邵", "湛", "汪", "祁", "毛", "禹", "狄", "米", "贝", "明", "臧",
		"计", "伏", "成", "戴", "谈", "宋", "茅", "庞", "熊", "纪", "舒", "屈", "项", "祝", "董", "梁", "杜", "阮", "蓝", "闵", "席", "季", "麻",
		"强", "贾", "路", "娄", "危", "江", "童", "颜", "郭", "梅", "盛", "林", "刁", "钟", "徐", "邱", "骆", "高", "夏", "蔡", "田", "樊", "胡",
		"凌", "霍", "虞", "万", "支", "柯", "昝", "管", "卢", "莫", "经", "房", "裘", "缪", "干", "解", "应", "宗", "丁", "宣", "贲", "邓", "郁",
		"单", "杭", "洪", "包", "诸", "左", "石", "崔", "吉", "钮", "龚", "程", "嵇", "邢", "滑", "裴", "陆", "荣", "翁", "荀", "羊", "於", "惠",
		"甄", "曲", "家", "封", "芮", "羿", "储", "靳", "汲", "邴", "糜", "松", "井", "段", "富", "巫", "乌", "焦", "巴", "弓", "牧", "隗", "山",
		"谷", "车", "侯", "宓", "蓬", "全", "郗", "班", "仰", "秋", "仲", "伊", "宫", "宁", "仇", "栾", "暴", "甘", "钭", "厉", "戎", "祖", "武",
		"符", "刘", "景", "詹", "束", "龙", "叶", "幸", "司", "韶", "郜", "黎", "蓟", "薄", "印", "宿", "白", "怀", "蒲", "邰", "从", "鄂", "索",
		"咸", "籍", "赖", "卓", "蔺", "屠", "蒙", "池", "乔", "阴", "鬱", "胥", "能", "苍", "双", "闻", "莘", "党", "翟", "谭", "贡", "劳", "逄",
		"姬", "申", "扶", "堵", "冉", "宰", "郦", "雍", "卻", "璩", "桑", "桂", "濮", "牛", "寿", "通", "边", "扈", "燕", "冀", "郏", "浦", "尚",
		"农", "温", "别", "庄", "晏", "柴", "瞿", "阎", "充", "慕", "连", "茹", "习", "宦", "艾", "鱼", "容", "向", "古", "易", "慎", "戈", "廖",
		"庾", "终", "暨", "居", "衡", "步", "都", "耿", "满", "弘", "匡", "国", "文", "寇", "广", "禄", "阙", "东", "欧", "殳", "沃", "利", "蔚",
		"越", "夔", "隆", "师", "巩", "厍", "聂", "晁", "勾", "敖", "融", "冷", "訾", "辛", "阚", "那", "简", "饶", "空", "曾", "毋", "沙", "乜",
		"养", "鞠", "须", "丰", "巢", "关", "蒯", "相", "查", "后", "荆", "红", "游", "竺", "权", "逯", "盖", "益", "桓", "公", "万", "俟", "司马",
		"上官", "欧阳", "夏侯", "诸葛", "闻人", "东方", "赫连", "皇甫", "尉迟", "公羊", "澹台", "公冶", "宗政", "濮阳", "淳于", "单于", "太叔", "申屠", "公孙",
		"仲孙", "轩辕", "令狐", "钟离", "宇文", "长孙", "慕容", "鲜于", "闾丘", "司徒", "司空", "丌官", "司寇", "仉督", "子车", "颛孙", "端木", "巫马", "公西",
		"漆雕", "乐正", "壤驷", "公良", "拓跋", "夹谷", "宰父", "谷梁", "晋楚", "闫法", "汝鄢", "涂钦", "段干", "百里", "东郭", "南门", "呼延", "归海", "羊舌",
		"微生", "岳帅", "缑亢", "况郈", "有琴", "梁丘", "左丘", "东门", "西门", "商牟", "佘佴", "伯赏", "南宫", "墨哈", "谯笪", "年爱", "阳佟", "第五", "言福"}
	min := []string{
		"怡", "文", "婷", "雅", "佳", "君", "志", "嘉", "俊", "家", "宏", "偉", "明", "慧", "欣", "宜", "惠", "彥", "如", "瑋", "宇", "豪", "芳", "建", "雯",
		"佩", "育", "柏", "凱", "智", "哲", "宗", "維", "銘", "傑", "淑", "玲", "冠", "穎", "玉", "翔", "瑜", "華", "廷", "孟", "政", "儀", "安", "仁", "郁",
		"涵", "子", "靜", "翰", "美", "國", "庭", "思", "軒", "珊", "賢", "珮", "瑩", "霖", "儒", "蓉", "正", "瑞", "鈞", "秀", "鴻", "倫", "伶", "盈", "琪",
		"萱", "威", "元", "佑", "信", "德", "立", "聖", "詩", "世", "婉", "潔", "昱", "鈺", "樺", "敏", "姿", "榮", "承", "慈", "曉", "奕", "芬", "書", "逸",
		"萍", "馨", "士", "真", "毅", "祥", "茹", "中", "筱", "琳", "菁", "弘", "良", "博", "娟", "慶", "芸", "勳", "依", "達", "心", "永", "恩", "韋", "成",
		"峰", "毓", "杰", "緯", "宛", "昌", "振", "璇", "麗", "于", "妤", "忠", "青", "誠", "裕", "龍", "均", "民", "淳", "貞", "旻", "容", "純", "平", "皓",
		"品", "耀", "昇", "寧", "勝", "憲", "浩", "靖", "啟", "吟", "英", "莉", "辰", "韻", "薇", "健", "綺", "蕙", "瑄", "仲", "秋", "秉", "群", "祐", "修",
		"亭", "珍", "揚", "昭", "琦", "任", "益", "源", "光", "詠", "玟", "景", "富", "駿", "柔", "泰", "閔", "羽", "輝", "堯", "雲", "琬", "峻", "蓁", "伊",
		"禎", "燕", "千", "易", "東", "巧", "鳳", "昀", "致", "培", "晴", "漢", "伯", "睿", "芝", "敬", "義", "亞", "方", "興", "翊", "清", "鈴", "筠", "玫",
		"一", "瓊", "隆", "丞", "倩", "麟", "晏", "岳", "湘", "崇", "帆", "臻", "強", "欽", "展", "沛", "雄", "尚", "雨", "晉", "名", "竹", "甫", "旭", "喬",
		"澤", "諭", "宣", "俐", "斌", "凡", "紹", "泓", "學", "筑", "甄", "舒", "坤", "謙", "梅", "若", "璋", "舜", "全", "琇", "遠", "奇", "俞", "芷", "映",
		"盛", "金", "虹", "懿", "蘭", "婕", "新", "碩", "乃", "彬", "仕", "媛", "融", "孝", "豐", "錦", "意", "嵐", "諺", "至", "彰", "淵", "天", "吉", "尹",
		"昕", "大", "云", "祺", "汝", "順", "瑾", "瀚", "松", "榕", "姵", "力", "又", "幸", "和", "齡", "昆", "男", "人", "憶", "之", "勇", "捷", "陽", "晨",
		"原", "以", "齊", "超", "為", "誼", "采", "雪", "朝", "鑫", "恆", "鵬", "菱", "兆", "長", "卉", "惟", "邦", "卿", "生", "楷", "竣", "香", "亮", "亦",
		"誌", "妍", "春", "程", "銓", "煒", "綸", "暐", "愷", "素", "其", "小", "瑛", "紋", "姍", "妮", "碧", "季", "福", "汶", "治", "鋒", "妙", "暉", "綾",
		"桂", "鼎", "勛", "晟", "叡", "禹", "星", "可", "聰", "寬", "煜", "洋", "億", "翎", "騰", "淇", "月", "鎮", "呈", "宥", "貴", "桓", "棋", "利", "茵",
		"茜", "凌", "懷", "羿", "寶", "妏", "岑", "岱", "麒", "瑤", "進", "璟", "屏", "嫻", "琮", "蘋", "友", "章", "侑", "念", "康", "蔚", "曜", "蓮", "亨",
		"林", "延", "森", "恬", "權", "上", "宸", "蓓", "琴", "函", "剛", "煌", "耿", "茂", "彤", "玄", "允", "瀅", "升", "勤", "劭", "少", "珈", "音", "介",
		"馥", "克", "南", "繼", "霆", "年", "傳", "錡", "昶", "苓", "曼", "葳", "渝", "蒨", "翠", "顯", "禮", "瑀", "百", "典", "善", "紀", "榆", "肇", "羚",
		"迪", "炳", "霈", "煥", "州", "有", "得", "賓", "皇", "道", "洲", "綱", "祖", "棠", "雁", "先", "紫", "霞", "重", "斐", "璿", "喻", "佐", "航", "錚",
		"珠", "芃", "杏", "川", "梓", "恒", "武", "苑", "藝", "孜", "評", "定", "然", "曄", "耕", "陵", "勻", "言", "菀", "嫺", "震", "聿", "鳴", "艾", "登",
		"希", "儷", "韶", "予", "炫", "頤", "薏", "基", "紘", "守", "葦", "堂", "棻", "歆", "能", "妃", "谷", "訓", "崴", "彩", "資", "陞", "珺", "山", "衡",
		"軍", "仰", "乙", "聲", "嬿", "加", "斯", "城", "熙", "海", "愛", "螢", "薰", "衍", "村", "科", "媚", "苡", "驊", "浚", "胤", "夫", "唯", "微", "芊",
		"芯", "伸", "廣", "則", "丹", "祈", "厚", "卓", "鐘", "奎", "發", "淨", "悅", "玠", "勁", "楓", "譽", "輔", "燁", "尉", "甯", "保", "津", "錫", "璽",
		"語", "鎧", "騏", "雍", "郡", "沂", "暄", "夢", "含", "倍", "硯", "時", "照", "業", "穗", "霓", "運", "澄", "懋", "寰", "幼", "堅", "櫻", "棟", "昊",
		"忻", "合", "縈", "楨", "京", "樹", "濬", "獻", "禾", "璧", "晶", "貝", "慕", "盟", "耘", "仙", "璁", "江", "行", "靈", "敦", "絜", "逢", "日", "牧",
		"嬋", "存", "本", "理", "徽", "顥", "令", "雋", "愉", "楚", "農", "閎", "相", "高", "同", "苹", "律", "茗", "沅", "譯", "經", "右", "旺", "才", "暘",
		"崧", "蒼", "衛", "晃", "恭", "魁", "姝", "議", "自", "泉", "玥", "汎", "樵", "賀", "凰", "貽", "泳", "謹", "葶", "萬", "殷", "炯", "蕾", "頡", "復",
		"娜", "涓", "財", "荃", "娥", "余", "澔", "助", "芹", "芮", "格", "倢", "沁", "頻", "乾", "田", "唐", "眉", "釗", "樂", "崑", "倚", "淯", "增", "珣",
		"飛", "琨", "今", "御", "芩", "稚", "弦", "鍾", "邑", "鍵", "頌", "師", "朋", "挺", "添", "潤", "璘", "慎", "端", "偲", "烜", "丁", "開", "秦", "昂",
		"濟", "霙", "曦", "惇", "向", "圻", "炘", "楠", "旗", "笙", "豫", "鶴", "滿", "知", "洵", "枝", "珩", "徵", "鉦", "儂", "三", "協", "丰", "濱", "常",
		"嫚", "嵩", "絹", "植", "期", "台", "翌", "貿", "岡", "銀", "洪", "連", "奐", "滋", "霜", "藍", "戎", "妘", "廉", "鑬", "蔓", "熹", "庚", "夙", "佾",
		"爾", "靚", "尊", "燦", "享", "詔", "申", "根", "臣", "嬅", "泊", "親", "詮", "圓", "菡", "壬", "樑", "弼", "爵", "應", "溢", "倉", "鐴", "琛", "錞",
		"璞", "熒", "筌", "嫣", "莞", "侃", "歡", "黛", "巍", "瑱", "璉", "嶸", "喜", "祿", "僑", "木", "穆", "彧", "菊", "居", "灝", "竺", "琁", "磊", "雙",
		"紅", "倪", "証", "媜", "杉", "諄", "睦", "萩", "見", "詒", "聆", "適", "淩", "怜", "壹", "濠", "臨", "印", "河", "紜", "賜", "樟", "咨", "禕", "偵",
		"鎂", "彗", "濤", "嚴", "因", "淞", "主", "勵", "竑", "芙", "姮", "旋", "沐", "燿", "玨", "緒", "嫈", "創", "焜", "環", "郎", "帝", "絢", "太", "媺",
		"叔", "霏", "白", "屹", "榛", "菘", "必", "久", "潁", "謀", "吾", "舟", "箴", "璨", "匡", "瑢", "綿", "蒂", "貫", "玹", "陳", "鉅", "蘊", "翼", "代",
		"憓", "琄", "詳", "艷", "荷", "倖", "功", "風", "禧", "池", "韓", "荏", "澐", "顗", "棨", "炎", "贊", "湧", "漪", "湄", "頎", "溱", "境", "琍", "溥",
		"瀛", "璐", "鏡", "兒", "壕", "珀", "縉", "幃", "鎔", "柄", "聯", "迺", "淙", "法", "賦", "嬌", "寅", "在", "詣", "猷", "範", "楹", "垣", "宴", "攸",
		"競", "羲", "緣", "量", "里", "舫", "躍", "恕", "渟", "滄", "稜", "淮", "鋐", "足", "桐", "芫", "周", "洛", "壽", "豊", "韡", "鎰", "曲", "琤", "帥",
		"瓏", "侖", "分", "策", "嬪", "橋", "玶", "韜", "紳", "園", "鉉", "聞", "菖", "夏", "瑗", "玳", "薪", "越", "梵", "絲", "巽", "鑑", "晁", "濃", "泱",
		"裴", "勃", "雰", "娸", "垂", "寒", "銜", "煦", "朱", "璦", "烈", "莊", "米", "熏", "堉", "觀", "堡", "繁", "官", "謦", "前", "榜", "溶", "澍", "襄",
		"珽", "鐸", "祝", "玓", "序", "水", "逵", "駒", "琡", "冬", "洳", "通", "司", "洺", "溫", "醇", "來", "巖", "烽", "蕎", "邵", "禪", "緻", "鵑", "岐",
		"塵", "而", "式", "棣", "錩", "玗", "餘", "嶽", "輯", "洧", "后", "記", "夆", "釧", "仟", "驛", "繹", "莘", "浤", "起", "虔", "帛", "述", "衣", "峙",
		"佶", "黃", "崙", "祁", "宓", "憬", "枚", "擎", "咸", "笛", "淋", "鍇", "材", "栩", "娉", "蒲", "壯", "迎", "劍", "諠", "圳", "皖", "拓", "銳", "絮",
		"匯", "蕓", "楊", "坪", "臺", "驥", "嗣", "煇", "慰", "作", "效", "再", "專", "丕", "妗", "諾", "李", "澧", "悌", "奉", "泯", "棉", "釋", "萌", "笠",
		"執", "庸", "臆", "葆", "鋼", "界", "葉", "姜", "崢", "證", "綠", "桑", "蟬", "初", "黎", "孫", "於", "鄉", "首", "杭", "茲", "擇", "錕", "宙", "陸",
		"從", "普", "築", "椿", "蒔", "祉", "炤", "膺", "樞", "張", "冰", "嫆", "委", "葵", "紓", "倬", "燊", "招", "肯", "菲", "勉", "阡", "徹", "朗", "蜜",
		"多", "顏", "樸", "辛", "研", "波", "湞", "與", "蕊", "女", "緹", "卜", "祚", "直", "赫", "竟", "諴", "揮", "澂", "晞", "模", "彙", "柳", "泠", "甲",
		"濰", "癸", "柱", "洸", "纓", "槿", "坊", "圭", "綜", "繡", "瓔", "絨", "統", "化", "旂", "瑟", "雀", "席", "石", "霽", "淼", "施", "約", "淦", "孔",
		"姬", "茱", "珂", "岫", "嶔", "讚", "教", "苾", "秩", "鐙", "弈", "崎", "畯", "積", "岷", "苗", "喨", "伍", "璠", "珞", "迦", "荻", "冀", "嬬", "侯",
		"公", "尤", "漳", "位", "礽", "府", "舉", "媄", "薈", "暖", "娣", "礎", "圃", "隚", "衿", "瀠", "諳", "鏞", "詞", "穩", "曙", "菽", "絃", "砡", "鶯",
		"禛", "剴", "望", "懌", "朕", "婧", "狄", "桀", "諒", "節", "劼", "俋", "引", "王", "九", "營", "莛", "薔", "己", "騫", "非", "輿", "苔", "員", "岩",
		"湛", "潭", "瀧", "嶢", "顓", "履", "囿", "昉", "識", "窈", "恂", "裔", "嶺", "濡", "揆", "丘", "脩", "卲", "宮", "瑭", "蝶", "筆", "諦", "將", "深",
		"旼", "彝", "贏", "巨", "孚", "晢", "北", "殿", "忞", "棓", "露", "敘", "巾", "樓", "涴", "旬", "凝", "圜", "愈", "梨", "旅", "呂", "特", "省", "果",
		"璜", "由", "竫", "旆", "造", "磬", "畇", "熠", "萃", "閣", "集", "讌", "嶧", "梧", "蔆", "覺", "虎", "地", "稟", "潓", "實", "讓", "陶", "港", "槐",
		"圖", "鋆", "皎", "訢", "精", "遙", "玎", "价", "優", "寓", "郅", "皆", "鎬", "浥", "罡", "嬛", "吏", "瓅", "情", "緗", "歷", "花", "吳", "好", "燈",
		"橙", "旖", "兼", "佰", "際", "字", "豔", "及", "會", "渼", "恪", "雷", "鄭", "陙", "論", "頂", "妡", "都", "乘", "鍠", "鋕", "許", "弋", "曾", "釆",
		"皜", "潮", "阜", "庠", "浦", "楙", "煖", "垚", "莆", "勢", "後", "蔭", "熾", "媗", "溪", "綵", "似", "圍", "軫", "劉", "也", "鈜", "蔡", "菩", "二",
		"峪", "勗", "鉞", "沿", "養", "何", "簡", "汪", "翡", "用", "舲", "央", "湖", "焄", "巡", "豈", "選", "藹", "錄", "鏵", "愔", "繪", "邁", "梁", "旨",
	}
	idx, t := 1, time.Date(1991, time.January, 1, 0, 0, 0, 0, time.Local)
	multis := 500
	sql := "insert into passengers(name, is_male, area, paperwork_type, paperwork_num, status, passenger_type, phone_num, tel_num, email, addr, zip_code) values"
	values := make([]string, 0, multis)
	for _, x := range xin {
		for _, m := range min {
			for _, lm := range min {
				if idx == 10000 {
					idx = 1
					t = t.AddDate(0, 0, 1)
				}
				pNum := "420116" + t.Format("20060102") + padLeft(strconv.Itoa(idx), 4, '0')
				values = append(values, "('"+x+m+lm+"', '1', 'CN', 1, '"+pNum+"', 1, 1, '13125169548', '', 'tod-chen@foxmail.com', '', '')")
				idx++
				if idx%multis == 0 {
					db.Exec(sql + strings.Join(values, ", "))
					values = make([]string, 0, multis)
				}
			}
		}
	}
}

// Passenger 乘客
type Passenger struct {
	PID           uint64
	Name          string // 姓名
	IsMale        bool   // 性别
	Area          string // 国家地区
	PaperworkType uint8  // 证件类型
	PaperworkNum  string // 证件号码
	Status        uint8  // 乘客信息状态 0:待核验; 1:核验通过; 2:核验未通过; 3:黑名单; ...etc
	PassengerType uint8  // 乘客类型 1:成人; 2:儿童; 3:学生; 4:伤残军人/伤残人民警察
	PhoneNum      string // 手机号
	TelNum        string // 固话
	Email         string // 邮箱
	Addr          string // 地址
	ZipCode       string // 邮编
}

func getPassenger(paperworkNum string, paperworkType uint8) (Passenger, bool) {
	p := new(Passenger)
	db.Model(&Passenger{}).Where("paperwork_num = ? and paperwork_type = ?", paperworkNum, paperworkType).First(p)
	if p.PaperworkNum != paperworkNum || p.PaperworkType != paperworkType {
		return *p, false
	}
	return *p, true
}

// StatusChanged 状态变更后，要通知所有添加者，同时变更对应的状态
func (p *Passenger) StatusChanged(newStatus uint8) (bool, error) {
	var adders []PassengerAdderMap
	db.Where("pid = ?", p.PID).Find(&adders)
	adderIds := make([]uint64, len(adders))
	for idx, item := range adders {
		adderIds[idx] = item.UID
	}
	db.Model(&Contact{}).Where("uid in (?) and p_id = ?", adderIds, p.PID).Update("status", newStatus)
	return true, nil
}

// PassengerAdderMap 乘客添加者的映射关系表
type PassengerAdderMap struct {
	PID uint64 // 乘客ID
	UID uint64 // 添加者ID(用户ID)
}

// User 注册用户
type User struct {
	UID                          uint64
	UserName                     string    //用户名
	Password                     string    //密码
	CancelOrderTimesInCurrentDay uint8     // 当天取消订单的次数
	LastLoginTime                time.Time // 登录时间，可用于判断session超时
}

// Register 注册
func (u *User) Register(p Passenger) (bool, error) {
	count := 0
	db.Model(&User{}).Where("user_name = ?", u.UserName).Count(&count)
	if count != 0 {
		return false, errors.New("用户名已被注册")
	}
	if passenger, ok := getPassenger(p.PaperworkNum, p.PaperworkType); ok {
		u.UID = passenger.PID
	} else {
		// 证件信息未登记在册，则创建一个
		p.PID = getPassengerID()
		u.UID = p.PID
		db.Create(&p)
	}
	db.Create(&u)
	return true, nil
}

// ChangePwd 修改密码
func (u *User) ChangePwd(newPwd string) error {
	db.Model(u).Update("password", newPwd)
	return nil
}

// Edit 修改个人信息
func (u *User) Edit() error {
	db.Save(u)
	return nil
}

// GetContact 获取所有联系人
// name 联系人姓名，模糊查询
func (u *User) GetContact(name string) (list []Contact) {
	db.Where("uid = ? and name like ?", u.UID, "%"+name+"%").Find(&list)
	return
}

// GetAvailableContact 获取有效状态的联系人，用于购票。无效状态的联系人，不可购票
func (u *User) GetAvailableContact() (list []Contact) {
	db.Where("uid = ? and status = 1", u.UID).Find(&list)
	return
}

// AddContact 添加联系人
func (u *User) AddContact(c *Contact) (bool, error) {
	count := 0
	db.Where("uid = ?", u.UID).Count(&count)
	if count >= 20 {
		return false, errors.New("联系人已达上限")
	}
	c.UID = u.UID
	// 乘客已经登记在册的
	if passenger, ok := getPassenger(c.PaperworkNum, c.PaperworkType); ok {
		c.PID = passenger.PID
		c.Name = passenger.Name
		c.IsMale = passenger.IsMale
		c.Area = passenger.Area
		c.Status = passenger.Status
		// 证件号、证件类型不用再重新赋值
		// 乘客类别、手机号、固话、邮箱、住址、邮编可由添加者随意填写，不用与乘客表中保持一致
	} else { // 乘客未登记在册的情况
		passenger := &Passenger{
			PID:           getPassengerID(),
			Name:          c.Name,
			IsMale:        c.IsMale,
			Area:          c.Area,
			PaperworkNum:  c.PaperworkNum,
			PaperworkType: c.PaperworkType,
			Status:        0, // 新增的乘客必然是未经过审核的
			PassengerType: c.PassengerType,
			PhoneNum:      c.PhoneNum,
			TelNum:        c.TelNum,
			Email:         c.Email,
			Addr:          c.Addr,
			ZipCode:       c.ZipCode,
		}
		c.PID = passenger.PID
		db.Create(passenger)
	}
	db.Create(c)
	return true, nil
}

// Contact 常用联系人
type Contact struct {
	UID       uint64    // 用户ID
	Passenger           // 联系人是乘客
	AddDate   time.Time // 添加的日期
}

// Edit 修改联系人信息
func (c *Contact) Edit() (bool, error) {
	db.Save(c)
	return true, nil
}

// Remove 删除联系人
func (c *Contact) Remove() (bool, error) {
	db.Delete(PassengerAdderMap{}, "uid = ? and p_id = ?", c.UID, c.PID)
	db.Delete(c)
	return true, nil
}
